name: Build Raspberry Pi4 Image

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Find latest tag
      uses: oprypin/find-latest-tag@v1
      with:
          repository:  bosch/swdc-os-quickstart-image-raspberry
          releases-only: false 
          token: ${{ secrets.BUILD_CLOUD_AGENT }}
      id: build_tag
    - run: echo "repo is at version ${{ steps.build_tag.outputs.tag }}"
    
    - name: Get current date
      id: build_date
      run: echo "::set-output name=date::$(date +'%d%m%Y')"
      
    - name: Get current version
      id: build_version
      run: echo "::set-output name=version::${{ steps.build_tag.outputs.tag }}_$(date +'%d%m%Y')"
      
    - run: echo "repo is at version ${{ steps.build_version.outputs.version }}"
    
    - uses: actions/checkout@v2
      with :
          repository: bosch/swdc-os-quickstart-image-raspberry
          token: ${{ secrets.BUILD_CLOUD_AGENT }}
    - uses: timdesi/arm-runner-action@HEAD
      id: build_image
      with:
        base_image : https://cdimage.ubuntu.com/releases/21.04/release/ubuntu-21.04-preinstalled-server-arm64+raspi.img.xz
        image_additional_mb : 4096
        cpu: 'cortex-a72'
        shell : bash
        use_systemd_nspawn: 'yes'
        copy_repository_path : '/.repo'
        commands: |
            cat /etc/os-release
            ls -l /.repo
            #sudo rsync -avh /.repo/src/home /home
            sudo cp -a /.repo/src/home/. /home
            sudo cp -a /.repo/src/etc/. /etc
            sudo cp -a /.repo/src/usr/. /usr
            sudo cp -a --no-preserve=mode,ownership /.repo/src/boot/. /boot
            
            #sudo apt install -y -q -f dialog apt-utils jq python3-pip can-utils containerd
            #pip3 install cantools
            
            #sudo apt install -y lightdm --no-install-recommends
            
            #cd /usr/bin
            #ls -l
            #./containerd &
            #sleep 10
            #ps aux | grep containerd
            
            #sudo ctr -n edgecontainerd i rm swdceuwedevgsopscr.azurecr.io/swdc-os-buttonadapter-talent:latest
            #sudo ctr -n edgecontainerd i rm swdceuwedevgsopscr.azurecr.io/swdc-os-pi2-seatadjuster-api-adapter:latest
            #sudo ctr -n edgecontainerd i rm swdceuwedevgsopscr.azurecr.io/iot-event-analytics/iotea-platform-arm64:latest
            #sudo ctr -n edgecontainerd i rm swdceuwedevgsopscr.azurecr.io/sota-bfb-adapter:latest
            
            #sudo ctr -n edgecontainerd i pull -u c0d49551-8e35-42d5-a82f-5b918ee9d159:euTVSqKLlDjo-Qmd9oBUEBTjoxgd3qxE9W swdceuwedevgsopscr.azurecr.io/swdc-os-buttonadapter-talent:latest
            #sudo ctr -n edgecontainerd i pull -u c0d49551-8e35-42d5-a82f-5b918ee9d159:euTVSqKLlDjo-Qmd9oBUEBTjoxgd3qxE9W swdceuwedevgsopscr.azurecr.io/swdc-os-pi2-seatadjuster-api-adapter:latest
            #sudo ctr -n edgecontainerd i pull -u c0d49551-8e35-42d5-a82f-5b918ee9d159:euTVSqKLlDjo-Qmd9oBUEBTjoxgd3qxE9W swdceuwedevgsopscr.azurecr.io/iot-event-analytics/iotea-platform-arm64:latest
            #sudo ctr -n edgecontainerd i pull -u c0d49551-8e35-42d5-a82f-5b918ee9d159:euTVSqKLlDjo-Qmd9oBUEBTjoxgd3qxE9W swdceuwedevgsopscr.azurecr.io/sota-bfb-adapter:latest

            #cd /usr/local/bin
            #ls -l
            #./edgecontainerd &
            #sleep 10
            #ps aux | grep edgecontainerd
            
            #sudo edgectr list
            
            cd /home/ubuntu/.deploy/scripts
            ls -l
            
            ./post_build.sh
      
    - name: Compress the release image
      #if: github.ref == 'refs/heads/releng' || startsWith(github.ref, 'refs/tags/')
      run: |
        mv ${{ steps.build_image.outputs.image }} swdc-image-${{ steps.build_tag.outputs.tag }}-${{ steps.build_date.outputs.date }}.img
        xz -0 -T 0 -v swdc-image-${{ steps.build_tag.outputs.tag }}-${{ steps.build_date.outputs.date }}.img
        #zip swdc-image-${{ steps.build_tag.outputs.tag }}-${{ steps.build_date.outputs.date }}.img.zip swdc-image-${{ steps.build_tag.outputs.tag }}-${{ steps.build_date.outputs.date }}.img
        ls -l
        
    #- name: Upload to Azure
    #  run: |
          #az storage copy -s './swdc-image-${{ steps.build_tag.outputs.tag }}-${{ steps.build_date.outputs.date }}.img.zip' --destination-container '$web' --connection-string '${{ secrets.CONNECTIONSTRING }}'
          
    - name: Upload release image
      uses: actions/upload-artifact@v2
      #if: github.ref == 'refs/heads/releng' || startsWith(github.ref, 'refs/tags/')
      with:
        name: Release image
        path: my-release-image.img.xz
